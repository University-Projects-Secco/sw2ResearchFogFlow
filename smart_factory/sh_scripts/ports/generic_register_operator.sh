#!/bin/bash
#usage: "sh register-operator.sh docker_image_name 192.168.1.132 4041  galaxarum latest
IMAGE=$1;
IP=${2-'192.168.1.132'}
PORT=${3-4041}
OWNER=${4-galaxarum};
VERSION=${5-latest}
echo "trying to register $IMAGE on port $PORT"
curl -iX POST \
          "http://$IP:8070/ngsi10/updateContext" \
        -H 'Content-Type: application/json' \
        -d "{
   \"contextElements\": [
      {
         \"entityId\":{
            \"id\":\"$IMAGE\",
            \"type\":\"Operator\"
         },
         \"attributes\":[
            {
               \"name\":\"designboard\",
               \"type\":\"object\",
               \"value\":{
                  \"blocks\":[
                     {
                        \"id\":1,
                        \"module\":null,
                        \"type\":\"Parameter\",
                        \"values\":{
                           \"name\":\"service_port\",
                           \"values\":[
                              \"$PORT\"
                           ]
                        },
                        \"x\":-425,
                        \"y\":-158
                     },
                     {
                        \"id\":2,
                        \"module\":null,
                        \"type\":\"Operator\",
                        \"values\":{
                           \"description\":\"\",
                           \"name\":\"$IMAGE\"
                        },
                        \"x\":-186,
                        \"y\":-69
                     }
                  ],
                  \"edges\":[
                     {
                        \"block1\":1,
                        \"block2\":2,
                        \"connector1\":[
                           \"parameter\",
                           \"output\"
                        ],
                        \"connector2\":[
                           \"parameters\",
                           \"input\"
                        ],
                        \"id\":1
                     }
                  ]
               }
            },
            {
               \"name\":\"operator\",
               \"type\":\"object\",
               \"value\":{
                  \"description\":\"\",
                  \"name\":\"$IMAGE\",
                  \"parameters\":[
                     {
                        \"name\":\"service_port\",
                        \"values\":[
                           \"$PORT\"
                        ]
                     }
                  ]
               }
            }
         ],
         \"domainMetadata\":[
            {
               \"name\":\"location\",
               \"type\":\"global\",
               \"value\":\"global\"
            }
         ]
      },
      {
         \"entityId\":{
            \"id\":\"$OWNER/$IMAGE:$VERSION\",
            \"type\":\"DockerImage\"
         },
         \"attributes\":[
            {
               \"name\":\"image\",
               \"type\":\"string\",
               \"value\":\"$OWNER/$IMAGE\"
            },
            {
               \"name\":\"tag\",
               \"type\":\"string\",
               \"value\":\"$VERSION\"
            },
            {
               \"name\":\"hwType\",
               \"type\":\"string\",
               \"value\":\"X86\"
            },
            {
               \"name\":\"osType\",
               \"type\":\"string\",
               \"value\":\"Linux\"
            },
            {
               \"name\":\"operator\",
               \"type\":\"string\",
               \"value\":\"$IMAGE\"
            },
            {
               \"name\":\"prefetched\",
               \"type\":\"boolean\",
               \"value\":false
            }
         ],
         \"domainMetadata\":[
            {
               \"name\":\"operator\",
               \"type\":\"string\",
               \"value\":\"$IMAGE\"
            },
            {
               \"name\":\"location\",
               \"type\":\"global\",
               \"value\":\"global\"
            }
         ]
      }
   ],
   \"updateAction\": \"UPDATE\"
}
"
if [ $? -eq 0 ];
then
  echo "registered operator $IMAGE"
else
  1>&2 echo "failed to register operator $IMAGE"
fi